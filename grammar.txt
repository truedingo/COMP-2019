Program: 
    PACKAGE ID SEMICOLON Declarations
    ;

Declarations:
    VarDeclaration SEMICOLON Declarations
    |   FuncDeclaration SEMICOLON Declarations
    ;

VarDeclaration:
    VAR VarSpec
    |   VAR LPAR VarSpec SEMICOLON RPAR
    ;

VarSpec: /* empty */ 
    ID  Type
    |   ID CommaAux Type
    ;

CommaAux: /* empty */ 
     COMMA ID CommaAux
     | COMMA ID
    
    ;

Type: /* empty */ 
    INT
    |   FLOAT32
    |   BOOL
    |   STRING
    ;

FuncDeclaration: /* empty */ 
    FUNC ID LPAR RPAR FuncBody
    |   FUNC ID LPAR Parameters RPAR FuncBody
    |   FUNC ID LPAR RPAR Type FuncBody
    |   FUNC ID LPAR Parameters RPAR Type FuncBody
    ;

Parameters: /* empty */ 
    ID Type ParamAux
    |   ID Type
    ;

ParamAux: /* empty */ 
    COMMA ID Type ParamAux
    |   COMMA ID Type
    ;

FuncBody: /* empty */ 
    LBRACE VarsAndStatements RBRACE
    ;

VarsAndStatements: /* empty */ 
    VarsAndStatements   SEMICOLON
    |   VarsAndStatements VarDeclaration SEMICOLON
    |   VarsAndStatements Statement SEMICOLON
    ;

Statement: /* empty */ 
    ID ASSIGN Expr
    |   LBRACE Statement RBRACE
    |   IF Expr LBRACE StatementRept RBRACE
    |   IF Expr LBRACE StatementRept ELSE LBRACE StatementRept RBRACE
    |   FOR LBRACE StatementRept RBRACE
    |   FOR Expr LBRACE StatementRept RBRACE
    |   RETURN
    |   RETURN Expr
    |   FuncInvocation
    |   ParseArgs
    |   PRINT LPAR Expr RPAR
    |   PRINT LPAR STRLIT RPAR
    ;

StatementRept: /* empty */ 
    Statement SEMICOLON StatementRept
    | Statement SEMICOLON
    ;

ParseArgs: /* empty */ 
    ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
    ;

FuncInvocation: /* empty */ 
    ID LPAR RPAR
    |   ID LPAR Expr ExprRept RPAR
    ;

ExprRept: /* empty */ 
    COMMA Expr ExprRept
    | COMMA Expr
    ;

Expr: /* empty */ 
    Expr OR Expr
    |   Expr AND Expr
    |   Expr LT Expr
    |   Expr GT Expr
    |   Expr EQ Expr
    |   Expr NE Expr
    |   Expr LE Expr
    |   Expr GE Expr
    |   Expr PLUS Expr
    |   Expr MINUS Expr
    |   Expr STAR Expr
    |   Expr DIV Expr
    |   Expr MOD Expr
    |   NOT Expr
    |   MINUS Expr
    |   PLUS Expr
    |   INTLIT
    |   REALLIT
    |   ID
    |   FuncInvocation
    |   LPAR Expr RPAR
    ;